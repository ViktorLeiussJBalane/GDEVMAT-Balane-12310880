
float amplitude = 30;
float frequency = 0.1;
float phase = 0;


void setup()
{
  size(1280, 720, P3D); // set windows size to 1280 x 720
  camera(0, 0, -(height/2.0) / tan(PI*30.0 / 180.0), 0, 0, 0, 0, -1, 0);
}


void draw()
{
  background(0);
   
  drawCartesianPlane();
  drawLinearFunction(); 
  drawQuadracticFunction();
  drawSinWave();
  drawCircle();
  
  phase += 0.15;
}

void drawCartesianPlane()
{
  strokeWeight(1.5); 
  color white = color(255, 255, 255); 
  fill(white);
  stroke(white);
  line(-300, 0, 300, 0);
  line(0, -300, 0, 300); 
  
  for (int i = -300; i < 300; i+=10)
  {
    line (i, -2, i, 2);
    line(-2, i, 2, i);
  }
}

void drawLinearFunction()
{  
 
  
  color red = color(255 , 0, 0 );
  fill(red);
  noStroke();
  
  for (float x = -200; x <= 200; x ++)
  {
    circle(x, x + 2, 5);
  } 
}

void drawQuadracticFunction()
{

  
  color green = color(0, 255, 0);
  fill(green);
  stroke(green);
  
  for (float x = -300; x <= 300; x+= 0.1f)
  {
    circle(x * 10, ((float)Math.pow(x, 2) + (x * 2) - 5), 5);
  }
}

void drawCircle()

{
  color blue = color (0, 0, 255);
  fill (blue);
  stroke (blue);
  float radius = 50;
  
  for (int x = 0; x <= 360; x++)
  {
    circle((float)Math.cos(x) * radius, (float)Math.sin(x) * radius, 5);
  }

}

void drawSinWave()
{
  color blue = color(200, 98, 98);
  fill(blue);
  stroke(blue);
  
  for (float x = -200; x <= 200; x += 0.1f)  
  {
    float y = amplitude * (float)Math.sin(x * frequency + phase); 
    circle(x, y, 3);  
  }
}

void keyPressed() 
{
  // amplitude
  if (key == 'w' || key == 'W') {
    amplitude += 5;
  }
  if (key == 's' || key == 'S') {
    amplitude -= 5;
  }
  
  // frequency
  if (key == 'd' || key == 'D') {
    frequency += 0.01;
  }
  if (key == 'a' || key == 'A') {
    frequency -= 0.01;
  } 
}
